---
import { Image } from "astro:assets";
import Layout from "../../components/Layout.astro";
import {getSinglePropertyBySlug, getAllPropertySlugs} from "../../lib/client"


// Build the paths for each of our properties
export async function getStaticPaths() {

  const slugs = await getAllPropertySlugs()

  // transform our array of {slug: "property-slug"} objects into an array of {params: {slug: "property-slug"}}
  const paths = slugs.map(slug => {
    return {params: slug}
  })

  return paths
}

// Fetch the single property we landed on
const { slug } = Astro.params;

//  assign the property info to property variable for usability
const property = await getSinglePropertyBySlug(slug)

---


<Layout>

  <article class="max-w-screen-md mx-auto">

    <div class="grid grid-cols-2 gap-8">
      <div>
        <Image class="w-full object-cover mb-5" alt="" src={property.featuredImage.node.sourceUrl} width={1500} height={1000} />
      </div>
      <div>
        <h1 class="text-2xl py-8 font-bold">{property.title}</h1>
        <table class="w-full table-auto border-collapse border-t border-slate-600">
          <tbody>
            <tr>
              <td class="border-b border-slate-600 py-4 font-bold">Price:</td>
              <td class="border-b border-slate-600 text-right">${property.propertyFields.price}</td>
            </tr>
            <tr>
              <td class="border-b border-slate-600 py-4 font-bold">Square Footage:</td>
              <td class="border-b border-slate-600 text-right">{property.propertyFields.squareFootage} ft<sup>2</sup></td>
            </tr>
          </tbody>
        </table>
      </div>

    </div>

    <div id="map" style="height: 400px; width: 100%;" data-lat={property.propertyFields.latitude} data-lng={property.propertyFields.longitude}></div>

  </article>

</Layout>


<script>

  import L from 'leaflet'

  const mapElement = document.getElementById('map');

  const lat = mapElement.dataset.lat
  const lng = mapElement.dataset.lng
  const zoomLevel = 13

  const map = L.map(mapElement).setView([lat, lng], zoomLevel);

  L.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {
      maxZoom: 19,
      attribution: '&copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>'
  }).addTo(map);

  const marker = L.marker([lat, lng]).addTo(map);

</script>